{"version":3,"file":"static/js/258.c0c86267.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.js","components/Filter/Filter.styled.jsx","components/Filter/Filter.js","components/ContactItem/ContactItem.styled.jsx","components/ContactItem/ContactItem.js","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.js","pages/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Form, Field } from 'formik';\n\nexport const FormContact = styled(Form)`\n  margin-bottom: 30px;\n  padding: 10px;\n  border-radius: 5px;\n  border: 2px solid #000000;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 20px;\n`;\n\nexport const FormLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  font-size: 18px;\n`;\n\nexport const Input = styled(Field)`\n  margin-top: 10px;\n  padding: 5px;\n  width: 200px;\n  color: #0000ff;\n  border: 1px solid #9ba2a8;\n  font-size: 16px;\n\n  :hover,\n  :focus {\n    box-shadow: 0px 1px 5px 2px #9ba2a8;\n  }\n`;\n\nexport const ErrorText = styled.p`\n  font-size: 14px;\n  color: red;\n`;\n\nexport const AddBtn = styled.button`\n  padding: 5px 20px;\n  display: inline;\n  align-items: center;\n  text-align: center;\n  font-family: inherit;\n  font-size: 16px;\n  border: 2px solid #9ba2a8;\n  border-radius: 5px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: background-color 250ms ease, box-shadow 250ms ease;\n\n  :hover,\n  :focus {\n    background-color: #b2b2ed;\n    box-shadow: 0px 4px 10px 4px #9ba2a8;\n  }\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport toast from 'react-hot-toast';\nimport { Formik, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport 'yup-phone';\n\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\nimport {\n  FormContact,\n  FormLabel,\n  Input,\n  ErrorText,\n  AddBtn,\n} from './ContactForm.styled';\n\nlet schema = yup.object().shape({\n  name: yup.string().min(3).required(),\n  number: yup.string().phone('UA').required(),\n});\n\nconst FormError = ({ name }) => {\n  return (\n    <ErrorMessage\n      name={name}\n      render={message => <ErrorText>{message}</ErrorText>}\n    />\n  );\n};\n\nconst initialValues = {\n  name: '',\n  number: '',\n};\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const onAddContact = data => {\n    const newContact = {\n      name: data.name,\n      number: data.number,\n    };\n\n    const dataNameNormalized = newContact.name.toLowerCase();\n    const anyName = contacts.some(\n      ({ name }) => dataNameNormalized === name.toLowerCase()\n    );\n    const anyNumber = contacts.some(\n      ({ number }) => newContact.number === number\n    );\n    const findNumber = contacts.find(\n      ({ number }) => newContact.number === number\n    );\n    const notifyErrorName = () =>\n      toast.error(`\"${newContact.name}\" is already in contacts`);\n    const notifyErrorNumber = () =>\n      toast.error(\n        `Number \"${newContact.number}\" is already saved as \"${findNumber.name}\"`\n      );\n    const notifySucces = () =>\n      toast.success(`\"${newContact.name}\" successfully added!`);\n\n    if (anyName) {\n      notifyErrorName();\n      return;\n    }\n    if (anyNumber) {\n      notifyErrorNumber();\n      return;\n    }\n    notifySucces();\n    dispatch(addContact(newContact));\n  };\n\n  const handleSubmit = (values, { resetForm }) => {\n    onAddContact(values);\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={schema}\n      onSubmit={handleSubmit}\n    >\n      <FormContact>\n        <FormLabel htmlFor=\"name\">\n          Name\n          <Input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            placeholder=\"Name\"\n            required\n          />\n          <FormError name=\"name\" />\n        </FormLabel>\n        <FormLabel htmlFor=\"number\">\n          Number\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            placeholder=\"Number\"\n            required\n          />\n          <FormError name=\"number\" />\n        </FormLabel>\n        <AddBtn type=\"submit\">Add contact</AddBtn>\n      </FormContact>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\n\nexport const FilterLabel = styled.label`\n  margin-bottom: 20px;\n  display: flex;\n  flex-direction: column;\n  align-items: start;\n  gap: 5px;\n  font-size: 18px;\n`;\n\nexport const FilterInput = styled.input`\n  padding: 5px;\n  color: #1f6451;\n  border: 1px solid #9ba2a8;\n\n  font-size: 16px;\n\n  :hover,\n  :focus {\n    box-shadow: 0px 1px 5px 2px #9ba2a8;\n  }\n`;\n","import { useSelector, useDispatch } from 'react-redux';\n\nimport { setFilter } from 'redux/contacts/filterSlice';\nimport { selectFilter } from 'redux/contacts/selectors';\n\nimport { FilterLabel, FilterInput } from './Filter.styled';\n\nexport const Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const changeFilter = evt => {\n    dispatch(setFilter(evt.currentTarget.value));\n  };\n\n  return (\n    <FilterLabel htmlFor=\"filter\">\n      Find contacts by name\n      <FilterInput\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={changeFilter}\n        placeholder=\"Put the name for search\"\n      />\n    </FilterLabel>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Item = styled.div`\n  padding: 5px;\n  display: flex;\n  align-items: center;\n  border: 1px solid #9ba2a8;\n  font-size: 18px;\n  font-weight: 500;\n\n  :not(:last-child) {\n    border-bottom: none;\n  }\n`;\n\nexport const Number = styled.span`\n  margin-left: auto;\n`;\n\nexport const DeleteBtn = styled.button`\n  margin-left: 40px;\n  padding: 0px 20px;\n  display: inline;\n  align-items: center;\n  text-align: center;\n  font-family: inherit;\n  font-size: 14px;\n  border: 2px solid #9ba2a8;\n  border-radius: 5px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: background-color 250ms ease, box-shadow 250ms ease;\n\n  :hover,\n  :focus {\n    background-color: #e26565;\n    box-shadow: 0px 4px 10px 4px #9ba2a8;\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { PropTypes } from 'prop-types';\n\nimport { deleteContact } from 'redux/contacts/operations';\n\nimport { Item, Number, DeleteBtn } from './ContactItem.styled';\n\nexport const ContactItem = ({ contact }) => {\n  const { id, name, number } = contact;\n  const dispatch = useDispatch();\n\n  const handleDelete = () => dispatch(deleteContact(id));\n\n  return (\n    <Item>\n      <span>{name}: </span>\n      <Number>{number}</Number>\n      <DeleteBtn type=\"button\" onClick={handleDelete}>\n        Delete\n      </DeleteBtn>\n    </Item>\n  );\n};\n\nContactItem.propTypes = {\n  contact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }),\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  padding: 5px;\n  height: 300px;\n  border-radius: 5px;\n  border: 2px solid #000000;\n  overflow-y: scroll;\n`;\n\nexport const FilterText = styled.p`\n  color: #330101;\n  font-size: 20px;\n  font-weight: 500;\n`;\n","import { useContacts } from 'hooks';\nimport { ContactItem } from 'components/ContactItem';\nimport { FilterText, List } from './ContactList.styled';\n\nexport const ContactList = () => {\n  const { filter } = useContacts();\n  const { visibleContacts } = useContacts();\n\n  return visibleContacts.length ? (\n    <>\n      <List>\n        {visibleContacts\n          .sort((a, b) => a.name.localeCompare(b.name))\n          .map(contact => (\n            <li key={contact.id}>\n              <ContactItem contact={contact} />\n            </li>\n          ))}\n      </List>\n    </>\n  ) : (\n    <>\n      <FilterText>No matches found for \"{filter}\"!</FilterText>\n    </>\n  );\n};\n","import { Helmet } from 'react-helmet';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { useContacts } from 'hooks';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { ContactForm } from 'components/ContactForm';\nimport { Filter } from 'components/Filter';\nimport { ContactList } from 'components/ContactList';\nimport { Loader } from 'components/Loader';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const { items } = useContacts();\n  const { isLoading } = useContacts();\n  const { error } = useContacts();\n  const { filter } = useContacts();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      <ContactForm />\n      {error && <p>{error}</p>}\n      {items.length || filter ? (\n        <>\n          <Filter />\n          {isLoading && !error && <Loader />}\n          {!isLoading && !error && <ContactList />}\n        </>\n      ) : (\n        <p style={{ color: '#330101', fontSize: '20px', fontWeight: '500' }}>\n          There are no phone numbers in Contacts!\n        </p>\n      )}\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["FormContact","styled","Form","FormLabel","Input","Field","ErrorText","AddBtn","schema","yup","shape","name","min","required","number","phone","FormError","render","message","initialValues","ContactForm","dispatch","useDispatch","contacts","useSelector","selectContacts","validationSchema","onSubmit","values","resetForm","data","newContact","dataNameNormalized","toLowerCase","anyName","some","anyNumber","findNumber","find","toast","addContact","onAddContact","htmlFor","type","pattern","title","placeholder","FilterLabel","FilterInput","Filter","filter","selectFilter","value","onChange","evt","setFilter","currentTarget","Item","Number","DeleteBtn","ContactItem","contact","id","onClick","deleteContact","List","FilterText","ContactList","useContacts","visibleContacts","length","sort","a","b","localeCompare","map","items","isLoading","error","useEffect","fetchContacts","Helmet","Loader","style","color","fontSize","fontWeight"],"sourceRoot":""}